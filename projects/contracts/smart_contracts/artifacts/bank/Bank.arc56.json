{
    "name": "Bank",
    "structs": {},
    "methods": [
        {
            "name": "deposit",
            "args": [
                {
                    "type": "string",
                    "name": "memo"
                },
                {
                    "type": "pay",
                    "name": "pay_txn"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Accepts a payment into the app escrow and records sender's deposited balance",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "withdraw",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Sends ALGO back to the caller from their recorded balance",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "total_deposit": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfZGVwb3NpdA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "deposits": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": ""
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        143
                    ],
                    "errorMessage": "Deposit amount must be greater than zero"
                },
                {
                    "pc": [
                        205
                    ],
                    "errorMessage": "No deposits found for this account"
                },
                {
                    "pc": [
                        65,
                        86
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        137
                    ],
                    "errorMessage": "Receiver must be the contract address"
                },
                {
                    "pc": [
                        214
                    ],
                    "errorMessage": "Withdrawal amount exceeds balance"
                },
                {
                    "pc": [
                        208
                    ],
                    "errorMessage": "Withdrawal amount must be greater than zero"
                },
                {
                    "pc": [
                        124
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        68,
                        89
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        182
                    ],
                    "errorMessage": "check self.deposits entry exists"
                },
                {
                    "pc": [
                        169
                    ],
                    "errorMessage": "check self.total_deposit exists"
                },
                {
                    "pc": [
                        105
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmAg10b3RhbF9kZXBvc2l0BBUffHUxGEAAAygjZzEbQQBNggIEn1l8MgQxIUF2NhoAjgIAFwACI0MxGRREMRhENhoBF4gAeBYpTFCwIkMxGRREMRhENhoBVwIAMRYiCUk4ECISRIgAEhYpTFCwIkMxGUD/wzEYFEQiQ4oCAYv/OAcyChJEi/84CElEi/84AEm+TBdMQQAeiwKLAAgWiwFMvyMoZUSLAAgoTGeLAb5MF0xEjACJiwAWiwFMv0L/4ooBATEAvkwXTESL/0SL/0sBDkSxMQCL/7IIsgcishAjsgGzi/8JSUAACDEAvEiLAEyJMQCLABa/Qv/z",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
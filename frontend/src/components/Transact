import React, { useState } from 'react';
import { useWallet } from '@txnlab/use-wallet';

interface TransactProps {
  activeAddress: string;
}

const Transact: React.FC<TransactProps> = ({ activeAddress }) => {
  const [recipient, setRecipient] = useState('');
  const [amount, setAmount] = useState('1');
  const [asset, setAsset] = useState<'ALGO' | 'USDC'>('ALGO');
  const [isLoading, setIsLoading] = useState(false);
  const [txId, setTxId] = useState<string | null>(null);

  const handleSendPayment = async () => {
    setIsLoading(true);
    try {
      // Mock transaction - replace with actual Algorand transaction
      await new Promise(resolve => setTimeout(resolve, 2000));
      setTxId('mock-transaction-id-123456');
    } catch (error) {
      console.error('Payment failed:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="max-w-md mx-auto bg-white rounded-xl shadow-lg p-6">
      <h2 className="text-2xl font-bold text-gray-900 mb-6">Send Payment</h2>
      
      {/* Asset Selection */}
      <div className="flex space-x-2 mb-6">
        <button
          onClick={() => setAsset('ALGO')}
          className={`flex-1 py-2 px-4 rounded-lg font-semibold transition duration-200 ${
            asset === 'ALGO'
              ? 'bg-blue-600 text-white'
              : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
          }`}
        >
          ALGO
        </button>
        <button
          onClick={() => setAsset('USDC')}
          className={`flex-1 py-2 px-4 rounded-lg font-semibold transition duration-200 ${
            asset === 'USDC'
              ? 'bg-blue-600 text-white'
              : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
          }`}
        >
          USDC
        </button>
      </div>

      {/* Recipient Input */}
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">
          Recipient Address
        </label>
        <input
          type="text"
          value={recipient}
          onChange={(e) => setRecipient(e.target.value)}
          placeholder="Enter Algorand address"
          className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
      </div>

      {/* Amount Input */}
      <div className="mb-6">
        <label className="block text-sm font-medium text-gray-700 mb-2">
          Amount ({asset})
        </label>
        <input
          type="text"
          value={amount}
          onChange={(e) => setAmount(e.target.value)}
          className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <p className="text-xs text-gray-500 mt-1">
          Current balance: {asset === 'ALGO' ? '100.00' : '50.00'} {asset}
        </p>
      </div>

      {/* Send Button */}
      <button
        onClick={handleSendPayment}
        disabled={isLoading || !recipient || !amount}
        className={`w-full py-3 px-4 rounded-lg font-semibold text-white transition duration-200 ${
          isLoading || !recipient || !amount
            ? 'bg-gray-400 cursor-not-allowed'
            : 'bg-blue-600 hover:bg-blue-700 transform hover:scale-105'
        }`}
      >
        {isLoading ? (
          <div className="flex items-center justify-center">
            <div className="w-5 h-5 border-t-2 border-b-2 border-white rounded-full animate-spin mr-2"></div>
            Processing...
          </div>
        ) : (
          `Send ${amount} ${asset}`
        )}
      </button>

      {/* Transaction Success */}
      {txId && (
        <div className="mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
          <div className="flex items-center">
            <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mr-2">
              <span className="text-green-600 text-sm">âœ“</span>
            </div>
            <div>
              <p className="text-green-800 font-semibold">Payment Successful!</p>
              <p className="text-green-600 text-sm">Transaction ID: {txId}</p>
            </div>
          </div>
        </div>
      )}

      {/* Sender Info */}
      <div className="mt-6 pt-4 border-t border-gray-200">
        <p className="text-sm text-gray-600">
          Sending from: <span className="font-mono text-gray-800">{activeAddress}</span>
        </p>
      </div>
    </div>
  );
};

export default Transact;